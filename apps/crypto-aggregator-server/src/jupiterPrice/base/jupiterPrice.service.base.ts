/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, JupiterPrice as PrismaJupiterPrice } from "@prisma/client";

export class JupiterPriceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.JupiterPriceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.jupiterPrice.count(args);
  }

  async jupiterPrices<T extends Prisma.JupiterPriceFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.JupiterPriceFindManyArgs>
  ): Promise<PrismaJupiterPrice[]> {
    return this.prisma.jupiterPrice.findMany<Prisma.JupiterPriceFindManyArgs>(
      args
    );
  }
  async jupiterPrice<T extends Prisma.JupiterPriceFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.JupiterPriceFindUniqueArgs>
  ): Promise<PrismaJupiterPrice | null> {
    return this.prisma.jupiterPrice.findUnique(args);
  }
  async createJupiterPrice<T extends Prisma.JupiterPriceCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.JupiterPriceCreateArgs>
  ): Promise<PrismaJupiterPrice> {
    return this.prisma.jupiterPrice.create<T>(args);
  }
  async updateJupiterPrice<T extends Prisma.JupiterPriceUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.JupiterPriceUpdateArgs>
  ): Promise<PrismaJupiterPrice> {
    return this.prisma.jupiterPrice.update<T>(args);
  }
  async deleteJupiterPrice<T extends Prisma.JupiterPriceDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.JupiterPriceDeleteArgs>
  ): Promise<PrismaJupiterPrice> {
    return this.prisma.jupiterPrice.delete(args);
  }
}
