/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, RaydiumPrice as PrismaRaydiumPrice } from "@prisma/client";

export class RaydiumPriceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RaydiumPriceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.raydiumPrice.count(args);
  }

  async raydiumPrices<T extends Prisma.RaydiumPriceFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.RaydiumPriceFindManyArgs>
  ): Promise<PrismaRaydiumPrice[]> {
    return this.prisma.raydiumPrice.findMany<Prisma.RaydiumPriceFindManyArgs>(
      args
    );
  }
  async raydiumPrice<T extends Prisma.RaydiumPriceFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.RaydiumPriceFindUniqueArgs>
  ): Promise<PrismaRaydiumPrice | null> {
    return this.prisma.raydiumPrice.findUnique(args);
  }
  async createRaydiumPrice<T extends Prisma.RaydiumPriceCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RaydiumPriceCreateArgs>
  ): Promise<PrismaRaydiumPrice> {
    return this.prisma.raydiumPrice.create<T>(args);
  }
  async updateRaydiumPrice<T extends Prisma.RaydiumPriceUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RaydiumPriceUpdateArgs>
  ): Promise<PrismaRaydiumPrice> {
    return this.prisma.raydiumPrice.update<T>(args);
  }
  async deleteRaydiumPrice<T extends Prisma.RaydiumPriceDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.RaydiumPriceDeleteArgs>
  ): Promise<PrismaRaydiumPrice> {
    return this.prisma.raydiumPrice.delete(args);
  }
}
