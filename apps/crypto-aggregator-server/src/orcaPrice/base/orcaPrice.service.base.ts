/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, OrcaPrice as PrismaOrcaPrice } from "@prisma/client";

export class OrcaPriceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.OrcaPriceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.orcaPrice.count(args);
  }

  async orcaPrices<T extends Prisma.OrcaPriceFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrcaPriceFindManyArgs>
  ): Promise<PrismaOrcaPrice[]> {
    return this.prisma.orcaPrice.findMany<Prisma.OrcaPriceFindManyArgs>(args);
  }
  async orcaPrice<T extends Prisma.OrcaPriceFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrcaPriceFindUniqueArgs>
  ): Promise<PrismaOrcaPrice | null> {
    return this.prisma.orcaPrice.findUnique(args);
  }
  async createOrcaPrice<T extends Prisma.OrcaPriceCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrcaPriceCreateArgs>
  ): Promise<PrismaOrcaPrice> {
    return this.prisma.orcaPrice.create<T>(args);
  }
  async updateOrcaPrice<T extends Prisma.OrcaPriceUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrcaPriceUpdateArgs>
  ): Promise<PrismaOrcaPrice> {
    return this.prisma.orcaPrice.update<T>(args);
  }
  async deleteOrcaPrice<T extends Prisma.OrcaPriceDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.OrcaPriceDeleteArgs>
  ): Promise<PrismaOrcaPrice> {
    return this.prisma.orcaPrice.delete(args);
  }
}
